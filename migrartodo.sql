CREATE DATABASE gestion_empleados; CREATE DATABASE jardineria; CREATE DATABASE employees; CREATE DATABASE universidad_a; CREATE DATABASE universidad_b; CREATE DATABASE tienda_informatica; CREATE DATABASE ventas; 
\c gestion_empleados
 CREATE SCHEMA uce; create table uce.departamento ( codigo SERIAL not null, nombre VARCHAR(100) not null, presupuesto FLOAT8 not null, gastos FLOAT8 not null, constraint PK_DEPARTAMENTO primary key (codigo) ); create table uce.empleado ( codigo SERIAL not null, nif VARCHAR(9) not null, nombre VARCHAR(100) not null, apellido1 VARCHAR(100) not null, apellido2 VARCHAR(100) null, codigo_departamento INT4 null, constraint PK_EMPLEADO primary key (codigo) ); alter table uce.empleado add constraint FK_EMPLEADO_REFERENCE_DEPARTAM foreign key (codigo_departamento) references uce.departamento (codigo);
\c jardineria
CREATE SCHEMA IF NOT EXISTS migracion; CREATE TABLE migracion.oficina ( codigo_oficina VARCHAR(10) NOT NULL, ciudad VARCHAR(30) NOT NULL, pais VARCHAR(50) NOT NULL, region VARCHAR(50) DEFAULT NULL, codigo_postal VARCHAR(10) NOT NULL, telefono VARCHAR(20) NOT NULL, linea_direccion1 VARCHAR(50) NOT NULL, linea_direccion2 VARCHAR(50) DEFAULT NULL, PRIMARY KEY (codigo_oficina) ); CREATE TABLE migracion.empleado ( codigo_empleado INTEGER NOT NULL, nombre VARCHAR(50) NOT NULL, apellido1 VARCHAR(50) NOT NULL, apellido2 VARCHAR(50) DEFAULT NULL, extension VARCHAR(10) NOT NULL, email VARCHAR(100) NOT NULL, codigo_oficina VARCHAR(10) NOT NULL, codigo_jefe INTEGER DEFAULT NULL, puesto VARCHAR(50) DEFAULT NULL, PRIMARY KEY (codigo_empleado), FOREIGN KEY (codigo_oficina) REFERENCES migracion.oficina (codigo_oficina), FOREIGN KEY (codigo_jefe) REFERENCES migracion.empleado (codigo_empleado) ); CREATE TABLE migracion.gama_producto ( gama VARCHAR(50) NOT NULL, descripcion_texto TEXT, descripcion_html TEXT, imagen VARCHAR(256), PRIMARY KEY (gama) ); CREATE TABLE migracion.cliente ( codigo_cliente INTEGER NOT NULL, nombre_cliente VARCHAR(50) NOT NULL, nombre_contacto VARCHAR(30) DEFAULT NULL, apellido_contacto VARCHAR(30) DEFAULT NULL, telefono VARCHAR(15) NOT NULL, fax VARCHAR(15) NOT NULL, linea_direccion1 VARCHAR(50) NOT NULL, linea_direccion2 VARCHAR(50) DEFAULT NULL, ciudad VARCHAR(50) NOT NULL, region VARCHAR(50) DEFAULT NULL, pais VARCHAR(50) DEFAULT NULL, codigo_postal VARCHAR(10) DEFAULT NULL, codigo_empleado_rep_ventas INTEGER DEFAULT NULL, limite_credito NUMERIC(15,2) DEFAULT NULL, PRIMARY KEY (codigo_cliente), FOREIGN KEY (codigo_empleado_rep_ventas) REFERENCES migracion.empleado (codigo_empleado) ); CREATE TABLE migracion.pedido ( codigo_pedido INTEGER NOT NULL, fecha_pedido date NOT NULL, fecha_esperada date NOT NULL, fecha_entrega date DEFAULT NULL, estado VARCHAR(15) NOT NULL, comentarios TEXT, codigo_cliente INTEGER NOT NULL, PRIMARY KEY (codigo_pedido), FOREIGN KEY (codigo_cliente) REFERENCES migracion.cliente (codigo_cliente) ); CREATE TABLE migracion.producto ( codigo_producto VARCHAR(15) NOT NULL, nombre VARCHAR(70) NOT NULL, gama VARCHAR(50) NOT NULL, dimensiones VARCHAR(25) DEFAULT NULL, proveedor VARCHAR(50) DEFAULT NULL, descripcion TEXT DEFAULT NULL, cantidad_en_stock SMALLINT NOT NULL, precio_venta NUMERIC(15,2) NOT NULL, precio_proveedor NUMERIC(15,2) DEFAULT NULL, PRIMARY KEY (codigo_producto), FOREIGN KEY (gama) REFERENCES migracion.gama_producto (gama) ); CREATE TABLE migracion.detalle_pedido ( codigo_pedido INTEGER NOT NULL, codigo_producto VARCHAR(15) NOT NULL, cantidad INTEGER NOT NULL, precio_unidad NUMERIC(15,2) NOT NULL, numero_linea SMALLINT NOT NULL, PRIMARY KEY (codigo_pedido, codigo_producto), FOREIGN KEY (codigo_pedido) REFERENCES migracion.pedido (codigo_pedido), FOREIGN KEY (codigo_producto) REFERENCES migracion.producto (codigo_producto) ); CREATE TABLE migracion.pago ( codigo_cliente INTEGER NOT NULL, forma_pago VARCHAR(40) NOT NULL, id_transaccion VARCHAR(50) NOT NULL, fecha_pago date NOT NULL, total NUMERIC(15,2) NOT NULL, PRIMARY KEY (codigo_cliente, id_transaccion), FOREIGN KEY (codigo_cliente) REFERENCES migracion.cliente (codigo_cliente) );
\c employees
CREATE SCHEMA IF NOT EXISTS migracion; CREATE TABLE migracion.employees ( emp_no INTEGER NOT NULL, birth_date DATE NOT NULL, first_name VARCHAR(14) NOT NULL, last_name VARCHAR(16) NOT NULL, gender CHAR(1) CHECK (gender IN ('M', 'F')) NOT NULL, hire_date DATE NOT NULL, PRIMARY KEY (emp_no) ); CREATE TABLE migracion.departments ( dept_no CHAR(4) NOT NULL, dept_name VARCHAR(40) NOT NULL, PRIMARY KEY (dept_no), UNIQUE (dept_name) ); CREATE TABLE migracion.dept_emp ( emp_no INTEGER NOT NULL, dept_no CHAR(4) NOT NULL, from_date DATE NOT NULL, to_date DATE DEFAULT NULL, PRIMARY KEY (emp_no, dept_no), FOREIGN KEY (emp_no) REFERENCES migracion.employees (emp_no) ON DELETE CASCADE, FOREIGN KEY (dept_no) REFERENCES migracion.departments (dept_no) ON DELETE CASCADE ); CREATE TABLE migracion.dept_manager ( dept_no CHAR(4) NOT NULL, emp_no INTEGER NOT NULL, from_date DATE NOT NULL, to_date DATE DEFAULT NULL, PRIMARY KEY (dept_no, emp_no), FOREIGN KEY (dept_no) REFERENCES migracion.departments (dept_no) ON DELETE CASCADE, FOREIGN KEY (emp_no) REFERENCES migracion.employees (emp_no) ON DELETE CASCADE ); CREATE TABLE migracion.salaries ( emp_no INTEGER NOT NULL, salary INTEGER NOT NULL, from_date DATE NOT NULL, to_date DATE DEFAULT NULL, PRIMARY KEY (emp_no, from_date), FOREIGN KEY (emp_no) REFERENCES migracion.employees (emp_no) ON DELETE CASCADE ); CREATE TABLE migracion.titles ( emp_no INTEGER NOT NULL, title VARCHAR(50) NOT NULL, from_date DATE NOT NULL, to_date DATE DEFAULT NULL, PRIMARY KEY (emp_no, title, from_date), FOREIGN KEY (emp_no) REFERENCES migracion.employees (emp_no) ON DELETE CASCADE );
\c universidad_a
CREATE SCHEMA IF NOT EXISTS post_uni_a; SET search_path TO post_uni_a; CREATE TABLE departamento ( id SERIAL PRIMARY KEY, nombre VARCHAR(50) NOT NULL ); CREATE TABLE persona ( id SERIAL PRIMARY KEY, nif VARCHAR(9) UNIQUE, nombre VARCHAR(25) NOT NULL, apellido1 VARCHAR(50) NOT NULL, apellido2 VARCHAR(50), ciudad VARCHAR(25) NOT NULL, direccion VARCHAR(50) NOT NULL, telefono VARCHAR(9), fecha_nacimiento DATE NOT NULL, sexo CHAR(1) CHECK (sexo IN ('H', 'M')) NOT NULL, tipo VARCHAR(10) CHECK (tipo IN ('profesor', 'alumno')) NOT NULL ); CREATE TABLE profesor ( id_profesor INT PRIMARY KEY, id_departamento INT NOT NULL, FOREIGN KEY (id_profesor) REFERENCES persona(id), FOREIGN KEY (id_departamento) REFERENCES departamento(id) ); CREATE TABLE grado ( id SERIAL PRIMARY KEY, nombre VARCHAR(100) NOT NULL ); CREATE TABLE asignatura ( id SERIAL PRIMARY KEY, nombre VARCHAR(100) NOT NULL, creditos NUMERIC(5, 2) NOT NULL, tipo VARCHAR(10) CHECK (tipo IN ('básica', 'obligatoria', 'optativa')) NOT NULL, curso SMALLINT NOT NULL, cuatrimestre SMALLINT NOT NULL, id_profesor INT, id_grado INT NOT NULL, FOREIGN KEY(id_profesor) REFERENCES profesor(id_profesor), FOREIGN KEY(id_grado) REFERENCES grado(id) ); CREATE TABLE curso_escolar ( id SERIAL PRIMARY KEY, anyo_inicio INT NOT NULL CHECK (anyo_inicio >= 1900 AND anyo_inicio <= 2100), anyo_fin INT NOT NULL CHECK (anyo_fin >= 1900 AND anyo_fin <= 2100) ); CREATE TABLE alumno_se_matricula_asignatura ( id_alumno INT NOT NULL, id_asignatura INT NOT NULL, id_curso_escolar INT NOT NULL, PRIMARY KEY (id_alumno, id_asignatura, id_curso_escolar), FOREIGN KEY (id_alumno) REFERENCES persona(id), FOREIGN KEY (id_asignatura) REFERENCES asignatura(id), FOREIGN KEY (id_curso_escolar) REFERENCES curso_escolar(id) );
\c universidad_b
CREATE SCHEMA IF NOT EXISTS bdd2_migracion; CREATE TABLE IF NOT EXISTS bdd2_migracion.departamento ( id SERIAL PRIMARY KEY, nombre VARCHAR(50) NOT NULL ); CREATE TABLE IF NOT EXISTS bdd2_migracion.alumno ( id SERIAL PRIMARY KEY, nif VARCHAR(9) UNIQUE, nombre VARCHAR(25) NOT NULL, apellido1 VARCHAR(50) NOT NULL, apellido2 VARCHAR(50), ciudad VARCHAR(25) NOT NULL, direccion VARCHAR(50) NOT NULL, telefono VARCHAR(9), fecha_nacimiento DATE NOT NULL, sexo CHAR(1) CHECK (sexo IN ('H', 'M')) NOT NULL ); CREATE TABLE IF NOT EXISTS bdd2_migracion.profesor ( id SERIAL PRIMARY KEY, nif VARCHAR(9) UNIQUE, nombre VARCHAR(25) NOT NULL, apellido1 VARCHAR(50) NOT NULL, apellido2 VARCHAR(50), ciudad VARCHAR(25) NOT NULL, direccion VARCHAR(50) NOT NULL, telefono VARCHAR(9), fecha_nacimiento DATE NOT NULL, sexo CHAR(1) CHECK (sexo IN ('H', 'M')) NOT NULL, id_departamento INT NOT NULL, FOREIGN KEY (id_departamento) REFERENCES bdd2_migracion.departamento(id) ); CREATE TABLE IF NOT EXISTS bdd2_migracion.grado ( id SERIAL PRIMARY KEY, nombre VARCHAR(100) NOT NULL ); CREATE TABLE IF NOT EXISTS bdd2_migracion.asignatura ( id SERIAL PRIMARY KEY, nombre VARCHAR(100) NOT NULL, creditos NUMERIC(5, 2) NOT NULL, tipo VARCHAR(10) CHECK (tipo IN ('básica', 'obligatoria', 'optativa')) NOT NULL, curso SMALLINT NOT NULL, cuatrimestre SMALLINT NOT NULL, id_profesor INT, id_grado INT NOT NULL, FOREIGN KEY (id_profesor) REFERENCES bdd2_migracion.profesor(id), FOREIGN KEY (id_grado) REFERENCES bdd2_migracion.grado(id) ); CREATE TABLE IF NOT EXISTS bdd2_migracion.curso_escolar ( id SERIAL PRIMARY KEY, anyo_inicio INT NOT NULL CHECK (anyo_inicio >= 1900 AND anyo_inicio <= 2100), anyo_fin INT NOT NULL CHECK (anyo_fin >= 1900 AND anyo_fin <= 2100) ); CREATE TABLE IF NOT EXISTS bdd2_migracion.alumno_se_matricula_asignatura ( id_alumno INT NOT NULL, id_asignatura INT NOT NULL, id_curso_escolar INT NOT NULL, PRIMARY KEY (id_alumno, id_asignatura, id_curso_escolar), FOREIGN KEY (id_alumno) REFERENCES bdd2_migracion.alumno(id), FOREIGN KEY (id_asignatura) REFERENCES bdd2_migracion.asignatura(id), FOREIGN KEY (id_curso_escolar) REFERENCES bdd2_migracion.curso_escolar(id) );
\c tienda_informatica
CREATE SCHEMA uce; create table uce.fabricante ( codigo SERIAL not null, nombre VARCHAR(100) not null, constraint PK_FABRICANTE primary key (codigo) ); create table uce.producto ( codigo SERIAL not null, nombre VARCHAR(100) not null, precio FLOAT8 not null, codigo_fabricante INT4 not null, constraint PK_PRODUCTO primary key (codigo) ); alter table uce.producto add constraint FK_PRODUCTO_REFERENCE_FABRICAN foreign key (codigo_fabricante) references uce.fabricante (codigo);
\c ventas
CREATE SCHEMA IF NOT EXISTS migracion; CREATE TABLE migracion.cliente ( id SERIAL PRIMARY KEY, nombre VARCHAR(100) NOT NULL, apellido1 VARCHAR(100) NOT NULL, apellido2 VARCHAR(100), ciudad VARCHAR(100), categoria INT ); CREATE TABLE migracion.comercial ( id SERIAL PRIMARY KEY, nombre VARCHAR(100) NOT NULL, apellido1 VARCHAR(100) NOT NULL, apellido2 VARCHAR(100), comision REAL ); CREATE TABLE migracion.pedido ( id SERIAL PRIMARY KEY, total DOUBLE PRECISION NOT NULL, fecha DATE, id_cliente INT NOT NULL, id_comercial INT NOT NULL, FOREIGN KEY (id_cliente) REFERENCES migracion.cliente(id), FOREIGN KEY (id_comercial) REFERENCES migracion.comercial(id) ); 